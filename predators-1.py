#!/usr/bin/env python

# predators-1.py.py
# (C) Mikhail (myke) Kolodin, 2021
# 2022-01-11 2022-01-11 0.2

# ~ доки: https://docs.python.org/3/library/turtle.html

# ~ 1ый подход к симуляции хищников и жертв.

# ~ есть пространство SIZE x SIZE клеток (300х300).
# ~ в нём есть случ. количество в случайных места хищников (PREDs) и жертв (VICs).
# ~ они случайно двигаются вверх- вниз- вправо- влево.
# ~ если хищник нападает на жертву, он её съедает и становится сытым.
# ~ если хищник голодает более STARVE (50) ходов, он умирает от голода.
# ~ если хищник сыт чаще FAT (3) раз за REPRO (20) шагов,
# ~ то рядом (внутри квадрата PREDBORN (20x20) появляется новый хищник
# ~ (в пустой клетке).
# ~ если жертва жива более SURVIVE (30) ходов,
# ~ то рядом (внутри квадрата VICBORN (20x20) появляется новая жертва
# ~ (в пустой клетке).

SIZE     = 300
STARVE   = 50
FAT      = 3
REPRO    = 10
PREDBORN = 20
SURVIVE  = 30
VICBORN  = 20

DODRAW   = 1    # надо отрисовывать черепашкой, а потом показать таблицу
DODRAW   = 0    # не надо отрисовывать черепашкой, только всё просчитать и показать таблицу результатов

import random
import turtle

def simstep():
    """шаг симуляции"""
    ...

def init_all():
    """полная начальная инициализация"""
    ...

def print_result():
    """распечатка результата"""
    ...
    
def main():
    """стартёр"""
    ...

# глобальные данные

victims   = []           # жертвы
# dict: x, y, survived, 

predators = []           # хищники
# dict: x, y, startved, fat=[шаги  когда кушал, не более FAT штук]

bystep    = [(0, 0)]     # лог - сколько кого было (хищники, жертвы)...
# потом отрисуем графики и т.п.

board = []               # доска
# (x, y, тип ('v', 'p'), 

# запуск всего

main()
